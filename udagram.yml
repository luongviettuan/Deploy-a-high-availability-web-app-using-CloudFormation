Description: Tuanlv12 / Deploy a high-availability web app using CloudFormation - Webapp

Parameters:
  EnvironmentName:
    Description: My Develop Environment
    Type: String

Resources:
  # SecurityGroup for Load Balancer (allow all traffic inbound port 80)
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      # SecurityGroupEgress:
      #   - IpProtocol: tcp
      #     FromPort: 80
      #     ToPort: 80
      #     CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Load-Balancer-Security-Group

  # SecurityGroup for Web App
  WebAppSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Only allow http to our load balancer and SSH from local
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          # CidrIp: 0.0.0.0/0
          SourceSecurityGroupId: !Ref LBSecGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 58.186.70.0/15
      # SecurityGroupEgress:
      #   - IpProtocol: tcp
      #     FromPort: 0
      #     ToPort: 65535
      #     CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WebServer-Security-Group

  # Security Group for Bastion Host
  BastionSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for bastion servers, Allow SSH to our jumpboxes
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 58.186.70.0/15
      # SecurityGroupEgress:
      #   - IpProtocol: tcp
      #     FromPort: 80
      #     ToPort: 80
      #     CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Bastions-Security-Group

  # Launch configuration
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install unzip awscli -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://francescoc-bucket/udacity.zip ./
          unzip -o udacity.zip
      ImageId: ami-0e001c9271cf7f3b9
      SecurityGroups:
        - Ref: WebAppSecGroup
      InstanceType: t3.medium
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"
      IamInstanceProfile: !Ref WebServerS3InstanceProfile

  #Role for S3
  ServerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServerToS3-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  WebServerS3InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ServerToS3-profile
      Path: /
      Roles:
        - !Ref ServerInstanceRole

  InstanceS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3Policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              s3:*
              # - s3:*
            Resource:
              - arn:aws:s3:::francescoc-bucket/*
              - arn:aws:s3:::francescoc-bucket
      Roles:
        - !Ref ServerInstanceRole

  # Autoscaling Group
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: "4"
      MaxSize: "4"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  # Load Balancer
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUBL-NET-1"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUBL-NET-2"
      SecurityGroups:
        - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: "80"
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 6
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  # Bastion Hosts
  BastionPriv1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e001c9271cf7f3b9
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "BastionSecGroup"
          SubnetId:
            Fn::ImportValue: !Sub "${EnvironmentName}-PUBL-NET-1"

  BastionPriv2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e001c9271cf7f3b9
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "BastionSecGroup"
          SubnetId:
            Fn::ImportValue: !Sub "${EnvironmentName}-PUBL-NET-2"

# Outputs:
#   WebAppLB:
#     Description: The load balancer URL
#     Value: !Join ["", ["http://", !GetAtt WebAppLB.DNSName]]
#     Export:
#       Name: !Sub ${EnvironmentName}-LB-URL
